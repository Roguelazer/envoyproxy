name: "Deploy"
on:
  workflow_call:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
permissions:
  contents: write
  packages: write
env:
  REGISTRY_IMAGE: ghcr.io/roguelazer/envoyproxy
jobs:
  generate-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Generate Version
        id: version
        run: |
          echo "version=tip-$(date +%Y%m%d.%H%M%S).${GITHUB_SHA:0:4}" >> "$GITHUB_OUTPUT"
  build-amd64:
    runs-on: ubuntu-24.04
    env:
      platform: linux/amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Prepare
        run: |
          platform="${{ env.platform }}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Login to Packages Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build container
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.REGISTRY_IMAGE }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v5
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
  build-arm64:
    runs-on: ubuntu-24.04-arm
    env:
      platform: linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Prepare
        run: |
          platform=${{ env.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Login to Packages Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build container
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.REGISTRY_IMAGE }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v5
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - build-arm64
      - build-amd64
      - generate-version
    steps:
      - name: Download digests
        uses: actions/download-artifact@v6
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true
      - name: Login to Packages Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,${{ needs.generate-version.outputs.version }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
  crete-tag:
    name: "Create and push git tag"
    runs-on: ubuntu-latest
    needs:
      - generate-version
      - merge
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Create tag
        id: create-tag
        run: |
          git tag ${{ needs.generate-version.outputs.version }} ${{ github.sha }}
      - name: Push Tag
        run: git push origin tag ${{ needs.generate-version.outputs.version }}
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          target_commitish: ${{ github.sha }}
          tag_name: ${{ needs.generate-version.outputs.version }}
          generate_release_notes: true
          make_latest: true
      - name: send push
        run: |
          curl -f \
          -d token=${{ secrets.PUSHOVER_TOKEN }} \
          -d user=${{ secrets.PUSHOVER_USER }} \
          -d priority=0 \
          -d message="${{github.repository}} ${{ github.ref_name }} deployed" \
          -d ttl=86400 \
          -d sound=bike \
          https://api.pushover.net/1/messages.json
